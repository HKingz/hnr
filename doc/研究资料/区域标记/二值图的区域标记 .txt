二值图的区域标记 


区域标记(Connected Components Labeling)的目的就是给图象中每一个连通的区域分配一个唯一的标记值。目前的区域标记方法有很多，比较常见的有以下三种

1：区域生长法

2：Run-Length法

3：扫描法


顾名思意了，区域生长法的思路就是首先选定一个种子点，然后使用递归或是栈的方式不断扩充以识别区域。


Run-Length方法是一种相当高效的方法，利用游程编码的压缩能力以及指针的快速寻址能力(相对与另两种方法)，在空间和时间两方面都获得很大的提升。听说一个德国的公司对一种基于Run-Length的标记算法申请了专利，此处不便详细解释(其实是不太了解^_^)


扫描法应该是应用的比较广泛的一种标记方法，最容易、也是最吃力的方法就是对图象进行N次扫描，直至所有联通区域都被检测并标记，呵呵，想必这个N的大小依赖于你的运气了。另一种扫描法被称为两次扫描法，因为该方法第一次扫描图象，标记象素同时建立一个冲突表，第二次就扫描这个冲突表，经过这两次扫描后图象即标记完成。因为最近或许会用到这个算法，所以对实现中的问题做以下说明。


二次扫描的第一步是按照从左到右，从上到下的次序扫描全图，给每一个象素点分配一个初步的标记值，同时建立冲突表，记录相邻的连通区域。依据从左到右，从上到下的扫描次序，当前目标象素P的左，左上，上，右上的象素或是背景或是已经有了标记值(此处以8-邻域为例，4-邻域的情况类似)，则P的标记值可以按以下几种情况确定：

a) 这四个象素均是背景点，则P在一个新的连通区域中，故分配给P一个新的标签值；

b) 四个象素点中有且仅有一个是目标点，则P和这个点在同一个区域中，故把该目标点的标记值赋给P；

c) 四个象素点中有两个或两个以上的目标点，则可以按照左，左上，上，右上的先后次序，把P和一个目标点归于一个区域中。同时在冲突表中，记录这几个标记值对应的区域是相邻的。(PS: 觉得这个次序不是很重要，关键的是此时冲突表的建立)


二次扫描的第二步是扫描冲突表，把相邻的区域合并在一起。此处，我对区域标记的结果有以下要求： 希望标记值是从最大值开始分配，而且是依次序分配的。当最大值设为G时，而且最后有N个区域，则标记图中的标记值为G, G-1, G-2, ..., G-N+1。当然，这可能是对区域标记的“过份要求”，如果认为没有必要自然不必满足。一般，冲突表是一个G*G的二维矩阵R,其中G是最大的标记值。R(i,j) = 1表示标记值I和标记值j对应的区域是连通的。为了满足“过份要求”，还需要一个大小为G的数组M，M(i) = j表示标记值为i的区域和标记值为j的区域是连通的，因为要从大到小分配标志值，显然有M(G) = G。介绍了这些数据结构，则第二次扫描的步骤如下：

S1:初始化col = G，M(G) = G;

S2:扫描冲突表的col列，如果R(i,col) = 1，则令M(i) = M(col);

S3:col = col -1; if(col >= 0) goto S2; else 结束；

逻辑上，这个数组M是一个倒着的树(严格一点是一个森林)，每个“儿子”有一个指向“父亲”的指针，而每一个“父亲”对应着一个连通区域。

最后一步就轻松了，对于第一步处理后的标记图，如果某一个目标点标记值为i，则把M(i)作为该象素点的新标记值，就大功告成了。 



BUG080127 



描述：第一次扫描时，邻接信息传播不够充分，可能导致同一个连通区域被错认为两个区域订正：第一次扫描时，标记值从大到小分配，每次遇到冲突时总是选择周围最小的标记值作为当前像素的标记值，并修改冲突中余下的各个区域的邻接信息。逻辑上，该操作通过迭代的方法建立了一个包含了邻接信息的树状结构，其中每个节点的标记值总是大于其父节点，通过不断的合并操作完成传递邻接信息的目的。缺点:每次遇到冲突就必须进行合并操作，增大时间开销

图示：



如下图为第一次扫描中的一次抓图，标记值从最大值6开始分配，x代表当前处理的像素点，其标记值应该由其相邻区域的标记值决定。





图1是遇到x之间各个区域之间的连接关系树，4和6代表两个一个连通区域，5代表另一个连通区域。按照订正方法，区域6把4作为其父节点。处理像素点x时，需要参考该邻接关系树，x会发现其相邻区域的最小标记值是4(通过6传递该邻接信息)，则x应该被赋于标记值4, 同时需要更新关系树，因为区域5此时发现其邻接区域中最小标记值为4，更新后的关系树如图2所示。修正这个BUG后，后续的冲突表扫描变成多余，其实冲突表本身也是多余的。假设算法实现中支持的最大标记值为N，则所需空间由N*N变成N，但是如前所述时间开销也增大不少。
